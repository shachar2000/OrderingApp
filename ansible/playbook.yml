---
- name: Install and configure Docker with orderappserver container and node_exporter
  hosts: OrderAppServer
  become: true
  tasks:

    - name: Update apt package index
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Start Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Pull OrderAppServer Docker image
      docker_image:
        name: shacharavraham/orderappserver
        source: pull

    - name: Wait for 60 seconds
      pause:
        seconds: 60

    - name: Ensure the log file exists
      file:
        path: /home/ubuntu/AppOrderServer.log
        state: touch
        mode: '0644'

    - name: Run the frontend container
      docker_container:
        name: orderappserver
        image: shacharavraham/orderappserver:latest
        state: started
        restart_policy: always
        exposed_ports:
          - "3000"
        published_ports:
          - "3000:3000"
        volumes:
          - /home/ubuntu/AppOrderServer.log:/app/AppOrderServer.log  # חיבור תיקיית הלוגים בין ה-EC2 לקונטיינר
        env:
          RDS_ENDPOINT: "{{ lookup('env', 'RdsEndpoint') }}"
          RDS_USER: "{{ lookup('env', 'db_username') }}"
          RDS_PASSWORD: "{{ lookup('env', 'db_password') }}"
          RDS_NAME: "{{ lookup('env', 'db_name') }}"
          SECRET_KEY: "{{ lookup('env', 'secret_key') }}"
          ELASTICSEARCH_IP: "{{ lookup('env', 'prometheus_grafana_instance_ip') }}"

    - name: Download node_exporter tarball
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v1.9.1/node_exporter-1.9.1.linux-amd64.tar.gz"
        dest: "/tmp/node_exporter-1.9.1.linux-amd64.tar.gz"

    - name: Extract node_exporter
      unarchive:
        src: "/tmp/node_exporter-1.9.1.linux-amd64.tar.gz"
        dest: "/tmp/"
        remote_src: yes

    - name: Run node_exporter on port 9200 in background
      shell: "nohup /tmp/node_exporter-1.9.1.linux-amd64/node_exporter --web.listen-address=:9200 &"
      args:
        chdir: /tmp/node_exporter-1.9.1.linux-amd64
      environment:
        NODE_EXPORTER_HOME: "/tmp/node_exporter-1.9.1.linux-amd64"
      become: true

    - name: Verify node_exporter is running
      wait_for:
        host: "{{ ansible_host }}"
        port: 9200
        timeout: 60
        state: started

    - name: Install Logstash GPG key
      shell: |
        curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | gpg --dearmor -o /usr/share/keyrings/elastic-archive-keyring.gpg
      args:
        creates: /usr/share/keyrings/elastic-archive-keyring.gpg

    - name: Add Logstash repository to apt sources
      shell: |
        echo "deb [signed-by=/usr/share/keyrings/elastic-archive-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main" | tee /etc/apt/sources.list.d/elastic-8.x.list
      args:
        creates: /etc/apt/sources.list.d/elastic-8.x.list

    - name: Update apt package index after adding Logstash repo
      apt:
        update_cache: yes

    - name: Install Logstash
      apt:
        name: logstash
        state: present

    - name: Verify Logstash installation
      command: /usr/share/logstash/bin/logstash --version

    - name: Add Logstash to PATH
      lineinfile:
        path: /etc/profile
        line: 'export PATH=$PATH:/usr/share/logstash/bin'
        state: present
